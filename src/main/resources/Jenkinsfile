#!groovy

node{

    properties(
            [parameters(
                    [choice(
                            choices:
                                    ['@all', '@tsum_gift', '@tsum_bag', '@tsum_shoes', '@tsum_clothe', '@tsum_accessory', '@tsum_mennew', '@tsum_glass', '@tsum_cabinet',
                                    '@tsum_cart', '@tsum_promo'],
                            description: '', name: 'tags')
                    ])
            ],
            [pipelineTriggers([cron('0 1 * * * ')])],
            [buildDiscarder(
                    logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '10', numToKeepStr: '10'))]
    )


    stage("checkout"){
        try{
            // tool name: 'allure', type: 'allure'
            // tool name: 'jdk', type: 'jdk'
            // tool name: 'mvn', type: 'maven'
            git branch: 'lesson-tsum', credentialsId: 'e2497f2b-f8b6-4edc-ad90-b8e335836e28', url: 'https://github.com/ojhfoi/IdeaTest.git'
        }catch (e) {
            echo 'Checkout finish with error'
        }
    }
    stage("Run test"){
        try{
            slackSend channel: '#IdeaTest', message: "${env.PROJECT_NAME} is started with build number #${env.BUILD_NUBMER} is started", teamDomain: 'ojhfoi', tokenCredentialId: 'bbcf9d91-6eae-4d6d-b06d-98f95e36723a'
            withMaven(jdk: 'jdk', maven: 'mvn') {
                sh "mvn clean test -Dcucumber.filter.tags=${tags}"
            }
        }catch (e) {
            echo "Run test failure"
        }
    }
    stage("Allure Report"){
        try{
            allure includeProperties: false, jdk: 'jdk',
                    properties: [
                            [key: 'allure.issues.tracker.pattern', value: '%'],
                            [key: 'allure.tests.management.pattern', value: '%']],
                    results: [[path: 'target/allure-results']
                    ]
        }catch (e) {
            echo"Error in report generation!"
        }
    }
    stage('Send notification'){
        emailext attachLog: true, body: "Job with number: ${env.BUILD_NUMBER} finish execution with result: ${currentBuild.currentResult}. " +
                "Code take from: ${scm.branches[0].name}. \n More info on ${JOB_URL}", recipientProviders: [buildUser()], subject: "Jenkins ${env.PROJECT_NAME} - Build # ${env.BUILD_NUMBER} - ${env.BUILD_STATUS}!"

        slackSend channel: '#IdeaTest', message: "${env.BUILD_NUBMER} is finished with result: ${currentBuild.currentResult}", teamDomain: 'ojhfoi', tokenCredentialId: 'bbcf9d91-6eae-4d6d-b06d-98f95e36723a'
    }
    stage('clean and update'){
        checkout(
                [$class: 'GitSCM', branches: [[name: '*/lessob-tsum']],
                 doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout',
                                                                         deleteUntrackedNestedRepositories: true]],
                 submoduleCfg: [],
                 userRemoteConfigs: [[credentialsId: 'e2497f2b-f8b6-4edc-ad90-b8e335836e28',
                                      url: 'https://github.com/ojhfoi/IdeaTest.git']]])
    }
}